#include "Parser/Instruction.h"
#include <unordered_map>

#define TYPE_NAME(funcName) #funcName
#define TABLE_ENTRY(funcName)         \
	{                                 \
		TYPE_NAME(funcName), funcName \
	}

const std::vector<const char *> Instruction::typeNames = {
	"ADD",
	"SUB",
	"XOR",
	"OR",
	"AND",
	"SLL",
	"SRL",
	"SLT",
	"SLTU",
	"ADDI",
	"XORI",
	"ORI",
	"ANDI",
	"SLLI",
	"SRLI",
	"SRAI",
	"SLTI",
	"SLTIU",
	"LB",
	"LH",
	"LW",
	"LBU",
	"LHU",
	"SB",
	"SH",
	"SW",
	"BEQ",
	"BNE",
	"BLT",
	"BGE",
	"BLTU",
	"BGEU",
	"JAL",
	"JALR",
	"LUI",
	"AUIPC",
};

static const std::unordered_map<const char *, bool (*)(Instruction &)> operationsTable{
	TABLE_ENTRY(ADD_32),
	TABLE_ENTRY(SUB_32),
	TABLE_ENTRY(XOR_32),
	TABLE_ENTRY(OR_32),
	TABLE_ENTRY(AND_32),
	TABLE_ENTRY(SLL_32),
	TABLE_ENTRY(SRL_32),
	TABLE_ENTRY(SLT_32),
	TABLE_ENTRY(SLTU_32),
	TABLE_ENTRY(ADDI_32),
	TABLE_ENTRY(XORI_32),
	TABLE_ENTRY(ORI_32),
	TABLE_ENTRY(ANDI_32),
	TABLE_ENTRY(SLLI_32),
	TABLE_ENTRY(SRLI_32),
	TABLE_ENTRY(SRAI_32),
	TABLE_ENTRY(SLTI_32),
	TABLE_ENTRY(SLTIU_32),
	TABLE_ENTRY(LB_32),
	TABLE_ENTRY(LH_32),
	TABLE_ENTRY(LW_32),
	TABLE_ENTRY(LBU_32),
	TABLE_ENTRY(LHU_32),
	TABLE_ENTRY(SB_32),
	TABLE_ENTRY(SH_32),
	TABLE_ENTRY(SW_32),
	TABLE_ENTRY(BEQ_32),
	TABLE_ENTRY(BNE_32),
	TABLE_ENTRY(BLT_32),
	TABLE_ENTRY(BGE_32),
	TABLE_ENTRY(BLTU_32),
	TABLE_ENTRY(BGEU_32),
	TABLE_ENTRY(JAL_32),
	TABLE_ENTRY(JALR_32),
	TABLE_ENTRY(LUI_32),
	TABLE_ENTRY(AUIPC_32),
};
